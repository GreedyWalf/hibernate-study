<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="com.qs.entity.Account" table="t_account">
        <id name="accountId" type="java.lang.String" column="account_id">
            <!--generator的class类型
                assigned:主键的状态 assigned表示程序生成
                sequence：Oracle中的序列
                identity：Sql中的自动编号
                increment：先查询最大的编号再增1
                uuid：生成32位长的字符串
                native：根据数据库自动生成
             -->
            <generator class="uuid"/>
        </id>



        <!-- 直接使用property属性设置 -->
        <property name="accountName" type="java.lang.String" column="account_name" length="50" not-null="true" />

        <!-- 使用column设置 -->
        <property name="password" type="java.lang.String">
            <column name="password" length="50" not-null="true"/>
        </property>

        <property name="sex" type="java.lang.String" column="sex" />
        <property name="age" type="java.lang.Integer" column="age" />
        <property name="mobile" type="java.lang.String" column="mobile" />
        <property name="email" type="java.lang.String" column="email" />

        <!-- 通过many-to-one标签添加唯一属性约束，建立一对一关联关系 -->
        <many-to-one name="address" column="address_id" unique="true"/>

        <!-- 使用set标签映射多对多关系（一个用户可以有多种角色），cascade属性设置是否级联删除、更新 -->
        <set name="roles" table="t_account_role" cascade="all">
            <key column="account_id" />
            <many-to-many column="role_id" class="com.qs.entity.Role" />
        </set>
    </class>
</hibernate-mapping>